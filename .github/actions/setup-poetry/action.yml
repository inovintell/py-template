---
name: Cached Python and Poetry setup
description: Cache Poetry with additional extras key

inputs:
  python-version:
    description: >
      Version range or exact version of a Python version to use, using SemVer's version range syntax.
    required: false
    default: 3.x
  flags:
    description: Additional flags to provide for poetry install (e.g. --only tests)
    required: false
    default: ""
  key:
    description: Additional key used for caching pipx (useful when choosing --only)
    required: false
    default: ""

outputs:
  python-version:
    description: The installed python version. Useful when given a version range as input.
    value: ${{ steps.setup-python.outputs.python-version }}
  flag:
    description: Additional flags to provide for poetry install (e.g. --only tests)
    value: ${{ steps.setup-python.outputs.flags }}
  key:
    description: Additional key used for caching pipx (useful when choosing --only)
    value: ${{ steps.setup-python.outputs.key }}
  cache-hit:
    description: A boolean value to indicate projects dependencies were cached
    value: ${{ steps.setup-python.outputs.cache-hit }}
  poetry-cache-hit:
    description: A boolean value to indicate Poetry installation was cached
    value: ${{ steps.pipx-cache.outputs.cache-hit }}

runs:
  using: composite
  steps:
    - name: Get pipx env vars
      id: pipx-env-vars
      shell: bash
      run: |
        echo "pipx-home=${PIPX_HOME}" >> $GITHUB_OUTPUT
        echo "pipx-bin-dir=${PIPX_BIN_DIR}" >> $GITHUB_OUTPUT
    - name: Load pipx cache
      # If env vars are not defined do not load cache
      if: >
        steps.pipx-env-vars.outputs.pipx-home != ''
        && steps.pipx-env-vars.outputs.pipx-bin-dir != ''
      id: pipx-cache
      uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
      with:
        path: |
          ${{ steps.pipx-env-vars.outputs.pipx-home }}/venvs/poetry
          ${{ steps.pipx-env-vars.outputs.pipx-bin-dir }}/poetry
        key: >-
          ${{ runner.os }}-${{ inputs.python-version }}-
          ${{ inputs.key }}-pipx-${{ hashFiles('**/poetry.lock') }}
    - name: Install poetry
      # If env vars are not defined or we missed pipx cache, install poetry
      if: >
        (
        steps.pipx-env-vars.outputs.pipx-home == ''
        && steps.pipx-env-vars.outputs.pipx-bin-dir == ''
        )
        || steps.pipx-cache.outputs.cache-hit != 'true'
      shell: bash
      run: pipx install poetry
    - name: Load poetry cache
      uses: actions/setup-python@d27e3f3d7c64b4bbf8e4abfb9b63b83e846e0435 # v4.5.0
      id: setup-python
      with:
        python-version: ${{ inputs.python-version }}
        cache: poetry
    - name: Install poetry dependencies
      # If we missed poetry cache install dependencies
      if: steps.setup-python.outputs.cache-hit != 'true'
      shell: bash
      run: poetry install --all-extras ${{ inputs.flags }}
