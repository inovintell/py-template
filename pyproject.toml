[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

###############################################################################
#
#                               POETRY
#
###############################################################################

[tool.poetry]
name = "{{cookiecutter.repository}}"
version = "0.0.0"
description = "..."
authors = ["{{cookiecutter.repository_owner}}"]
maintainers = ["{{cookiecutter.repository_owner}}"]
readme = "README.md"

[tool.poetry.dependencies]
python="^3.8"

# A list of all of the optional dependencies, some of which are included in the
# below `extras`. They can be opted in by apps.

# Tests
pytest = { version = "^7.2.0", optional = true}
pytest-cov = { version = "^4.0.0", optional = true}
pytest-xdist = { version = "^3.0", optional = true}
pytest-html = { version = "^3.1.1", optional = true}
pytest-pretty-terminal = { version = "^1.1.0", optional = true}

# Fixers
black = { version = "^22.3.0", optional = true }
autoflake = { version = "^1.7.7", optional = true }
isort = { version = "^5.10.1", optional = true }
docformatter = { version = "^1.5.0", optional = true, extras=["tomli"] }
tryceratops = { version = "^1.1.0", optional = true }

# Linters
flakeheaven = { version = "^3.2.1", optional = true }
# Docstrings
flake8-pydocstyle = { version = "^0.2.0", optional = true }
# Complexity
flake8-cognitive-complexity = { version = "^0.1.0", optional = true }
flake8-functions = { version = "^0.0.7", optional = true }
flake8-simplify = { version = "^0.19.3", optional = true }
# Annotations
flake8-annotations = { version = "^2.9.1", optional = true }
flake8-annotations-complexity = { version = "^0.0.7", optional = true }
# Other
flake8-bugbear = { version = "^22.10.27", optional = true }
flake8-pytest-style = { version = "^1.6.0", optional = true }
flake8-quotes = { version = "^3.3.1", optional = true }
flake8-pie = { version = "^0.16.0", optional = true }
flake8-newspaper-style = { version = "^0.4.3", optional = true }
flake8-use-pathlib = { version = "^0.3.0", optional = true }
flake8-use-fstring = { version = "^1.4", optional = true }
flake8-builtins = { version = "^2.0.0", optional = true }
pep8-naming = { version = "^0.13.0", optional = true }
dlint = { version = "^0.13.0", optional = true }
mypy = { version = "^0.982", optional = true }

# Reporters
radon = { version = "^5.1.0", optional = true }
vulture = { version = "^2.6", optional = true }
cohesion = { version = "^1.0.0", optional = true }

# Docs
mkdocs = { version = "^1.3.0", optional = true }
mkdocs-material = { version = "^8.2.13", optional = true }
mkdocstrings = { version = "^0.19.0", optional = true }
mkdocstrings-python = { version = "^0.7.0", optional = true }
mkdocs-literate-nav = { version = "^0.5.0", optional = true }
mkdocs-section-index = { version = "^0.3.4", optional = true }
mkdocs-gen-files = { version = "^0.4.0", optional = true }
mkdocs-minify-plugin = { version = "^0.6.0", optional = true }
interrogate = { version = "^1.5.0", optional = true }

# Release
python-semantic-release = { version = "^7.28.1", optional = true }

[tool.poetry.extras]
tests = [
  "pytest",
  "pytest-cov",
  "pytest-xdist",
  "pytest-html",
  "pytest-pretty-terminal",
]

fixers = [
  "black",
  "autoflake",
  "isort",
  "docformatter",
  "tryceratops",
]

linters = [
  "flakeheaven",
  # Docstrings
  "flake8-pydocstyle",
  # Complexity
  "flake8-cognitive-complexity",
  "flake8-functions",
  "flake8-simplify",
  # Annotations
  "flake8-annotations",
  "flake8-annotations-complexity",
  # Other
  "flake8-bugbear",
  "flake8-pytest-style",
  "flake8-quotes",
  "flake8-pie",
  "flake8-newspaper-style",
  "flake8-use-pathlib",
  "flake8-use-fstring",
  "flake8-builtins",
  "pep8-naming",
  "dlint",
  "mypy",
]

reporters = [
  "radon",
  "vulture",
  "cohesion",
]

docs = [
  "mkdocs",
  "mkdocs-material",
  "mkdocstrings",
  "mkdocstrings-python",
  "mkdocs-literate-nav",
  "mkdocs-section-index",
  "mkdocs-gen-files",
  "mkdocs-minify-plugin",
  "interrogate",
]

release = [
  "python-semantic-release",
]

###############################################################################
#
#                               FIXERS SETTINGS
#
###############################################################################

[tool.black]
line-length = 79

[tool.isort]
profile = "black"

[tool.docformatter]
wrap-summaries = 79
wrap-descriptions = 79

###############################################################################
#
#                               FLAKE8 SETTINGS
#
###############################################################################

[tool.flakeheaven]
max_line_length = 79
max_doc_length = 79
format = "grouped"
show_source  = true
ignore = [
  "H601",
  "W503",
  "BLK100",
  "R70",
  "C90",
  "H60",
  "CFQ003"
]

###############################################################################
#
#                               REPORTERS SETTINGS
#
###############################################################################

[tool.vulture]
sort_by_size = true

###############################################################################
#
#                             COVERAGE SETTINGS
#
###############################################################################

[tool.coverage.run]
branch = true
relative_files = true

###############################################################################
#
#                              DOCS COVERAGE
#
###############################################################################

[tool.interrogate]
verbose = 2
fail-under = 100
exclude = [
  "docs",
  "build",
  "tests",
  "src/{{cookiecutter.repository}}/_version.py",
]

###############################################################################
#
#                             SEMANTIC RELEASE
#
###############################################################################

[tool.semantic_release]
version_variable = [
  "src/{{cookiecutter.repository}}/_version.py:__version__",
]
version_toml = [
    "pyproject.toml:tool.poetry.version"
]
branch = "main"
major_on_zero = false

build_command = false
upload_to_repository = false
upload_to_release = false

commit_author = "github-actions[bot] <github-actions[bot]@users.noreply.github.com>"
commit_subject = "feat: release {version}"
