[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

###############################################################################
#
#                                   POETRY
#
###############################################################################

[tool.poetry]
name = "{{cookiecutter.repository}}"
version = "0.0.0"
description = "..."
authors = ["{{cookiecutter.repository_owner}}"]
maintainers = ["{{cookiecutter.repository_owner}}"]
readme = "README.md"

###############################################################################
#
#                               DEPENDENCIES
#
###############################################################################

[tool.poetry.dependencies]
# Current workaround due to pytype not supporting Python 3.11
python=">=3.8, <3.11"

# A list of all of the optional dependencies, some of which are included in the
# below `extras`. They can be opted in by apps.

###############################################################################
#
#                                 TESTS
#
###############################################################################
pytest = { version = "^7.2.0", optional = true}
pytest-cov = { version = "^4.0.0", optional = true}
pytest-xdist = { version = "^3.0", optional = true}
pytest-html = { version = "^3.1.1", optional = true}
pytest-pretty-terminal = { version = "^1.1.0", optional = true}

###############################################################################
#
#                                 FIXERS
#
###############################################################################
black = { version = "^23.0.0", optional = true }
autoflake = { version = "^1.7.7", optional = true }
docformatter = { version = "^1.5.0", optional = true, extras=["tomli"] }
tryceratops = { version = "^1.1.0", optional = true }

###############################################################################
#
#                                 LINTERS
#
###############################################################################
# Linters
ruff = { version = "^0.0.253", optional = true }
# Static type checkers
pytype = { version = "^2023.0.0", optional = true }
# YAML
yamllint = { version = "^1.28.0", optional = true }

###############################################################################
#
#                                 REPORTERS
#
###############################################################################
radon = { version = "^5.1.0", optional = true }
vulture = { version = "^2.6", optional = true }
cohesion = { version = "^1.0.0", optional = true }

###############################################################################
#
#                                   DOCS
#
###############################################################################
mkdocs = { version = "^1.3.0", optional = true }
mkdocs-material = { version = "^9.0.0", optional = true }
mkdocstrings = { version = "^0.20.0", optional = true }
mkdocstrings-python = { version = "^0.8.0", optional = true }
mkdocs-literate-nav = { version = "^0.6.0", optional = true }
mkdocs-section-index = { version = "^0.3.4", optional = true }
mkdocs-gen-files = { version = "^0.4.0", optional = true }
mkdocs-minify-plugin = { version = "^0.6.0", optional = true }
interrogate = { version = "^1.5.0", optional = true }

###############################################################################
#
#                                 RELEASE
#
###############################################################################
python-semantic-release = { version = "^7.28.1", optional = true }

###############################################################################
#
#                                  COMMIT
#
###############################################################################
pre-commit = { version = "^3.0.0", optional = true }

[tool.poetry.extras]
tests = [
  "pytest",
  "pytest-cov",
  "pytest-xdist",
  "pytest-html",
  "pytest-pretty-terminal",
]

fixers = [
  "black",
  "autoflake",
  "docformatter",
  "tryceratops",
]

linters = [
  # Linters
  "ruff",
  # Static checker
  "pytype",
  # YAML
  "yamllint",
]

reporters = [
  "radon",
  "vulture",
  "cohesion",
]

docs = [
  "mkdocs",
  "mkdocs-material",
  "mkdocstrings",
  "mkdocstrings-python",
  "mkdocs-literate-nav",
  "mkdocs-section-index",
  "mkdocs-gen-files",
  "mkdocs-minify-plugin",
  "interrogate",
]

release = [
  "python-semantic-release",
]

commit = [
  "pre-commit",
]

###############################################################################
#
#                               FIXERS SETTINGS
#
###############################################################################

[tool.black]
line-length = 79

[tool.ruff]
select = [
  "F",
  "E",
  "W",
  "I",
  "N",
  "D",
  "UP",
  "YTT",
  "ANN",
  "S",
  "BLE",
  "FBT",
  "B",
  "A",
  "C4",
  "DTZ",
  "T10",
  "ICN",
  "INP",
  "PIE",
  "T20",
  "PT",
  "Q",
  "RSE",
  "RET",
  "SLF",
  "SIM",
  "TCH",
  "ARG",
  "PTH",
  "ERA",
  "PL",
  "TRY",
  "RUF",
]

ignore = [
  "ANN101",
  "ANN102",
  "ANN401",
]

line-length = 88
format = "grouped"

show-fixes = true
show-source = true
src = ["src", "tests"]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**" = ["S101"]

[tool.ruff.flake8-annotations]
suppress-dummy-args = true

[tool.ruff.flake8-pytest-style]
parametrize-values-type = "tuple"

[tool.ruff.pycodestyle]
max-doc-length = 79

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.pylint]
max-args = 6
max-branches = 6
max-returns = 6
max-statements = 20

[tool.docformatter]
wrap-summaries = 79
wrap-descriptions = 79

###############################################################################
#
#                               REPORTERS SETTINGS
#
###############################################################################

[tool.vulture]
sort_by_size = true

###############################################################################
#
#                               COVERAGE SETTINGS
#
###############################################################################

[tool.coverage.run]
branch = true
relative_files = true

###############################################################################
#
#                                 DOCS COVERAGE
#
###############################################################################

[tool.interrogate]
verbose = 2
fail-under = 100
exclude = [
  "docs",
  "build",
  "tests",
  "src/{{cookiecutter.repository}}/_version.py",
]

###############################################################################
#
#                               SEMANTIC RELEASE
#
###############################################################################

[tool.semantic_release]
version_variable = [
  "src/{{cookiecutter.repository}}/_version.py:__version__",
]
version_toml = [
    "pyproject.toml:tool.poetry.version"
]
branch = "main"
major_on_zero = false

build_command = false
upload_to_repository = false
upload_to_release = false

commit_author = "github-actions[bot] <github-actions[bot]@users.noreply.github.com>"
commit_subject = "feat: release {version}"
